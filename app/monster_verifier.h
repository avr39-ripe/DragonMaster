#ifndef MONSTER_VERIFIER_H
#define MONSTER_VERIFIER_H

/* Generated by flatcc 0.5.0-pre FlatBuffers schema compiler for C by dvide.com */

#ifndef MONSTER_READER_H
#include "../../../app/monster_reader.h"
#endif
#include "flatcc/flatcc_verifier.h"
#define PDIAGNOSTIC_IGNORE_UNUSED
#include "flatcc/portable/pdiagnostic_push.h"

static int __MyGame_Sample_Monster_table_verifier(flatcc_table_verifier_descriptor_t *td);
static int __MyGame_Sample_Weapon_table_verifier(flatcc_table_verifier_descriptor_t *td);

static int __MyGame_Sample_Equipment_union_verifier(flatcc_table_verifier_descriptor_t *td)
{
    switch(td->type) {
    case 1: return __MyGame_Sample_Weapon_table_verifier(td);
    default: return flatcc_verify_ok;
    }
}

static inline int MyGame_Sample_Vec3_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, MyGame_Sample_Vec3_identifier, 4, 12);
}

static inline int MyGame_Sample_Vec3_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, MyGame_Sample_Vec3_type_hash, 4, 12);
}

static inline int MyGame_Sample_Vec3_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, thash, 4, 12);
}

static inline int MyGame_Sample_Vec3_verify_as_root_with_identifer(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, fid, 4, 12);
}

static int __MyGame_Sample_Monster_table_verifier(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 4, 12) /* pos */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 2, 2) /* mana */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 2, 2) /* hp */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 3, 0) /* name */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 5, 0, 1, 1, 4294967295ULL) /* inventory */)) return ret;
    if ((ret = flatcc_verify_field(td, 6, 1, 1) /* color */)) return ret;
    if ((ret = flatcc_verify_table_vector_field(td, 7, 0, &__MyGame_Sample_Weapon_table_verifier) /* weapons */)) return ret;
    if ((ret = flatcc_verify_union_field(td, 9, 0, &__MyGame_Sample_Equipment_union_verifier) /* equipped */)) return ret;
    return flatcc_verify_ok;
}

static inline int MyGame_Sample_Monster_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, MyGame_Sample_Monster_identifier, &__MyGame_Sample_Monster_table_verifier);
}

static inline int MyGame_Sample_Monster_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, MyGame_Sample_Monster_type_identifier, &__MyGame_Sample_Monster_table_verifier);
}

static inline int MyGame_Sample_Monster_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &__MyGame_Sample_Monster_table_verifier);
}

static inline int MyGame_Sample_Monster_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &__MyGame_Sample_Monster_table_verifier);
}

static int __MyGame_Sample_Weapon_table_verifier(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* name */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 2, 2) /* damage */)) return ret;
    return flatcc_verify_ok;
}

static inline int MyGame_Sample_Weapon_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, MyGame_Sample_Weapon_identifier, &__MyGame_Sample_Weapon_table_verifier);
}

static inline int MyGame_Sample_Weapon_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, MyGame_Sample_Weapon_type_identifier, &__MyGame_Sample_Weapon_table_verifier);
}

static inline int MyGame_Sample_Weapon_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &__MyGame_Sample_Weapon_table_verifier);
}

static inline int MyGame_Sample_Weapon_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &__MyGame_Sample_Weapon_table_verifier);
}

#include "flatcc/portable/pdiagnostic_pop.h"
#endif /* MONSTER_VERIFIER_H */
